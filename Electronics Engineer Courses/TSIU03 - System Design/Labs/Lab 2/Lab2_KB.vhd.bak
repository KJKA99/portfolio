library ieee;
use ieee.std_logic_1164.all;

entity Lab2_KB is
port(...); -- Fix this
end entity;

architecture rtl of Lab2_KB is
-- Declare signals here
rstn <= std_logic; -- Reset, active low
clk <= std_logic; -- System clock, 50 MHz 
PS2_CLK <= std_logic; -- PS/2 clock line
PS2_CLK2 <= std_logic;
PS2_CLK_old <= std_logic;
PS2_DAT <= std_logic; -- PS/2 data line
detected_fall <= std_logic;


HEX0 <= std_logic_vector(6 downto 0); -- The 7-seg for the number 
LEDR <= std_logic_vector(7 downto 0); -- The LED bar for the scan code
HEX7 <= std_logic_vector(6 downto 0); -- Seg for group number '1'
HEX6 <= std_logic_vector(6 downto 0); -- Seg for group number '2'
shiftreg <= std_logic_vector(9 downto 0);

begin
	-- Process 1: Synchronise the input	
	p1 : process(clk) begin
		if rising_edge(clk) then
		-- Assign input DFFs here (DFF: D-type flip flops)
		PS2_DAT2 <= PS2_DAT;
		PS2_CLK2 <= PS2_CLK;
		PS2_CLK_old <= PS2_CLK2;
		end if;
	end process
	detected fall <= (not PS2_CLK2) and (PS2_CLK2_old); -- Fix this

	-- Process 2: Handle shiftreg:
	p2 : process(clk, rstn) begin
		if rstn = '0' then
		-- Insert reset values here
		shiftreg <= (others <= '0');
		
		elsif rising_edge(clk) then
		-- Assign shift register here
		-- shiftreg <= detcted_fall;
		shiftreg(0) <= shiftreg(1);
		shiftreg(1) <= shiftreg(2);
		shiftreg(2) <= shiftreg(3);
		shiftreg(3) <= shiftreg(4);
		shiftreg(4) <= shiftreg(5);
		shiftreg(5) <= shiftreg(6);
		shiftreg(6) <= shiftreg(7);
		shiftreg(7) <= shiftreg(8);
		shiftreg(8) <= shiftreg(9);
		shiftreg(9) <= PS2_DAT2;

		end if;
end process;
	-- Output the last byte of the scan code:
	LEDR <= shiftreg(7 downto 0);
	-- Recode the scan code (shiftreg(7..0)) here:
	HEX0 <= 
		"1000000" when shiftreg(7 downto 0) = "01000101" else
		"1111001" when shiftreg(7 downto 0) = "00010110" else 
		"0100100" when shiftreg(7 downto 0) = "00011110" else
		"0110000" when shiftreg(7 downto 0) = "00100110" else
		"0011001" when shiftreg(7 downto 0) = "00100101" else
		"0010010" when shiftreg(7 downto 0) = "00101110" else
		"0000010" when shiftreg(7 downto 0) = "00110110" else
		"1111000" when shiftreg(7 downto 0) = "00111101" else
		"0000000" when shiftreg(7 downto 0) = "00111110" else
		"0010000" when shiftreg(7 downto 0) = "01000110" else
		"0000110";
		
	-- Also write your group number on HEX {7, 6}.
	HEX7 <= "1111001"; -- "1"
	HEX6 <= "0100100"; -- "2"
end architecture;